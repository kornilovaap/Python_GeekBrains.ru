"""
Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
"""

"""
ВАР.1
Быстрое решение, но будет медленно работать на больших массивах, т.к. каждый раз над будет сортировать весь список
"""
rating = [7, 5, 3, 3, 2]

# 1. Создаём бесконечный цикл для запроса данных у пользователя
while True:
    try:
        print(f"Рейтинг: {rating}")
        user_input = int(input("Введите целое число (для выхода нажмите на любую букву) >>> "))
        # 2. Добавляем элемент в конец рейтинга
        rating.append(user_input)
        # 3. Делаем обратную сортировку
        rating.sort(reverse=True)

    # 4. Условие для выхода
    except ValueError:
        print("До свидания")
        exit()

"""
ВАР.2
Сложное и длинное решение, но рыботает быстрее
"""
rating = [7, 5, 5, 5, 3, 3, 2]

# # 1. Создаём бесконечный цикл для запроса данных у пользователя
while True:
    try:
        print(f"Рейтинг: {rating}")
        user_input = int(input("Введите целое число >>> "))

        # создали счетчик, обратившись к нашему рейтингу,
        # т.е. количесвто повторений какого-либо элемента в уже существующей последовательности
        current_rate_count = rating.count(user_input)

        # если current_rate_count > 0, то находим последний индекс нашего числа
        if current_rate_count > 0:
            last_current_idx = rating.index(
                user_input) + current_rate_count  # если ввели 5, то 1 + 3 = 4 - индекс места, куда вписать эл-т
            rating.insert(last_current_idx, user_input)  # insert по указанному идексу всавляет указанное значение

        else:
            # сравниваем с нулевой позицией
            if user_input > rating[0]:
                rating.insert(0, user_input)
            # сравнили с последней позицией
            elif user_input < rating[-1]:
                rating.append(user_input)
            # если ни в начале, ни в конце нет места для нашего числа, прийдется обойти весь список
            else:
                for idx, rate in enumerate(rating):
                    if rate < user_input:
                        rating.insert(idx, user_input)
                        break
        print(rating)
    except KeyboardInterrupt:
        exit()

"""
ВАР.3
Из интеренета
"""

my_list = [8, 8, 7, 4, 1]
print("Рейтинг >>> ", my_list)

user_el = int(input("Введите натуральное число [для выхода наберите 0]: "))
while user_el != 0:
    for el in range(len(my_list)):
        if my_list[el] == user_el:  # если элемент рейтинга равен введенному
            my_list.insert(el + 1, user_el)
            break
        elif my_list[0] < user_el:  # сравнили с первым элементом
            my_list.insert(0, user_el)
        elif my_list[-1] > user_el:  # сравнили с последним элементом
            my_list.append(user_el)
        elif my_list[el] > user_el > my_list[el + 1]:
            my_list.insert(el + 1, user_el)
    print("Новый рейтинг равен: ", my_list)
    user_el = int(input("Введите натуральное число [для выхода наберите 0]: "))
